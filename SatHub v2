--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v70=v2(v0(v20,16));if v19 then local v78=0;local v79;while true do if (0==v78) then v79=v5(v70,v19);v19=nil;v78=1;end if (v78==1) then return v79;end end else return v70;end end end);local function v21(v22,v23,v24)if v24 then local v71=0 + 0 ;local v72;while true do if (0==v71) then v72=(v22/((1 + 1)^(v23-(859 -(797 + 61)))))%((3 -1)^(((v24-(582 -(571 + 10))) -(v23-((8 -5) -2))) + (2 -1) + 0)) ;return v72-(v72%(1786 -((3457 -1903) + 231))) ;end end else local v73=(1948 -(248 + 1378 + 320))^(v23-(1 + 0)) ;return (((v22%(v73 + v73))>=v73) and (1 + 0)) or (792 -(210 + 582)) ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (6 -4) );v18=v18 + 2 ;return (v40 * (478 -222)) + v39 ;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + (1152 -(300 + 849)) );v18=v18 + (5 -3) + 2 ;return (v44 * (12731919 + 4045297)) + (v43 * (154434 -88898)) + (v42 * (1079 -823)) + v41 ;end local function v28()local v45=998 -(45 + (2585 -(877 + 755))) ;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (1==v45) then v48=655 -(165 + 489) ;v49=(v21(v47,2 -1 ,815 -(64 + 731) ) * (2^32)) + v46 ;v45=2 + 0 ;end if (v45==(2 + 0)) then v50=v21(v47,8 + 13 ,27 + 4 );v51=((v21(v47,32 + (1745 -(869 + 876)) )==(659 -((326 -116) + 448))) and  -(1 + 0)) or (1 + 0) ;v45=(1695 -(718 + 828)) -(59 + (114 -27)) ;end if (v45==(1247 -(374 + 870))) then if (v50==(0 + 0)) then if (v49==0) then return v51 * (0 + 0) ;else v50=1 + (0 -0) ;v48=0;end elseif (v50==(2514 -(193 + 274))) then return ((v49==(0 -0)) and (v51 * ((1 + 0)/(0 + 0)))) or (v51 * NaN) ;end return v8(v51,v50-(430 + 593) ) * (v48 + (v49/((812 -(464 + 346))^(1018 -(82 + 884))))) ;end if (v45==0) then v46=v27();v47=v27();v45=1105 -(118 + 986) ;end end end local function v29(v30)local v52;if  not v30 then local v74=0 + 0 ;while true do if (v74==0) then v30=v27();if (v30==((0 -0) -(1137 -(764 + 373)))) then return "";end break;end end end v52=v3(v16,v18,(v18 + v30) -(1634 -(763 + 870)) );v18=v18 + v30 ;local v53={};for v68=1 -0 , #v52 do v53[v68]=v2(v1(v3(v52,v68,v68)));end return v6(v53);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=1340 -(9 + 1331) ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v54~=3) then else v61=nil;v62=nil;v54=4;end if (v54==(18 -14)) then v63=nil;while true do if (v55==(0 -0)) then v56=1469 -(1149 + 320) ;v57=nil;v55=2 -1 ;end if (v55==(7 -5)) then v60=nil;v61=nil;v55=8 -5 ;end if (v55~=(685 -(223 + 459))) then else local v95=0;while true do if (v95==(0 -0)) then v62=nil;v63=nil;v95=2 -1 ;end if (v95~=1) then else v55=4;break;end end end if (v55==4) then while true do if (v56~=1) then else local v105=0 + 0 ;while true do if (v105==0) then v59=nil;v60=nil;v105=1 + 0 ;end if (v105~=1) then else v56=2 + 0 ;break;end end end if (v56==(3 + 0)) then v63=nil;while true do local v110=0;while true do if (v110==(1 + 0)) then if (v57==(441 -(36 + 405))) then local v115=0;local v116;while true do if (v115~=(1549 -(1151 + 398))) then else v116=413 -(23 + 390) ;while true do if (v116==1) then v60={};v61={v58,v59,nil,v60};v116=2;end if (v116~=(72 -(13 + 57))) then else v57=1 + 0 ;break;end if (0~=v116) then else local v120=0;while true do if (v120==1) then v116=1 + 0 ;break;end if (v120~=(706 -(305 + 401))) then else v58={};v59={};v120=2 -1 ;end end end end break;end end end break;end if ((0 -0)==v110) then local v113=0;local v114;while true do if (v113~=(0 -0)) then else v114=0;while true do if (v114==0) then local v119=0 -0 ;while true do if (v119~=(0 + 0)) then else if ((3 -1)==v57) then local v194=0 + 0 ;local v195;while true do if (v194~=(1911 -(562 + 1349))) then else v195=0;while true do local v208=25 -(10 + 15) ;local v209;while true do if (v208==(0 -0)) then v209=0;while true do if (v209==(0 -0)) then if (v195~=(1 -0)) then else for v267=1,v27() do v60[v267]=v27();end return v61;end if (0==v195) then local v264=0 + 0 ;while true do if (v264==(1626 -(1224 + 401))) then v195=1;break;end if ((193 -(59 + 134))==v264) then for v274=1,v27() do local v275=0;local v276;local v277;while true do if (v275~=(0 + 0)) then else v276=1046 -(653 + 393) ;v277=nil;v275=1614 -(134 + 1479) ;end if (1==v275) then while true do if (v276==(858 -(439 + 419))) then v277=v25();if (v21(v277,1 + 0 ,1)~=0) then else local v291=0;local v292;local v293;local v294;local v295;while true do if (v291~=2) then else while true do if (v292==0) then local v300=0;local v301;while true do if (0==v300) then v301=0;while true do if (v301==1) then v292=1 + 0 ;break;end if ((0 -0)~=v301) then else local v313=0;while true do if (v313==(0 -0)) then v293=v21(v277,2,3);v294=v21(v277,4,6);v313=1;end if (1~=v313) then else v301=1962 -(988 + 973) ;break;end end end end break;end end end if (v292==(1497 -(81 + 1415))) then local v302=0;while true do if (v302==(0 -0)) then local v308=0 + 0 ;while true do if (0==v308) then v295={v26(),v26(),nil,nil};if (v293==0) then local v314=0;local v315;local v316;while true do if (1~=v314) then else while true do if (v315==0) then v316=0;while true do if (v316==0) then v295[1 + 2 ]=v26();v295[1 + 3 ]=v26();break;end end break;end end break;end if (v314==(0 -0)) then v315=0;v316=nil;v314=1 -0 ;end end elseif (v293==1) then v295[3]=v27();elseif (v293==(3 -1)) then v295[3 + 0 ]=v27() -(2^16) ;elseif (v293==3) then local v319=0;local v320;while true do if (v319==(680 -(677 + 3))) then v320=0 -0 ;while true do if (v320==0) then v295[3 + 0 ]=v27() -((3 -1)^16) ;v295[5 -1 ]=v26();break;end end break;end end end v308=1 + 0 ;end if (v308==(2 -1)) then v302=1 + 0 ;break;end end end if (v302==(2 -1)) then v292=2;break;end end end if (v292==2) then local v303=0;while true do if (v303==1) then v292=14 -11 ;break;end if (v303==(0 + 0)) then if (v21(v294,3 -2 ,1733 -(1066 + 666) )==(1 + 0)) then v295[2]=v63[v295[6 -4 ]];end if (v21(v294,2,2)~=(277 -(265 + 11))) then else v295[3]=v63[v295[3 + 0 ]];end v303=1 + 0 ;end end end if (v292==(2 + 1)) then if (v21(v294,3,595 -(435 + 157) )==1) then v295[1254 -(225 + 1025) ]=v63[v295[1821 -(130 + 1687) ]];end v58[v274]=v295;break;end end break;end if (v291==0) then v292=0;v293=nil;v291=1 + 0 ;end if ((1 + 0)~=v291) then else v294=nil;v295=nil;v291=6 -4 ;end end end break;end end break;end end end for v278=870 -(611 + 258) ,v27() do v59[v278-(3 -2) ]=v33();end v264=4 -3 ;end end end break;end end break;end end end break;end end end if (v57==(3 -2)) then local v196=0;local v197;local v198;while true do if (v196~=1) then else while true do if (v197~=0) then else v198=0;while true do if (v198~=2) then else v57=1 + 1 ;break;end if (v198==0) then local v258=0;while true do if (v258==(0 -0)) then v62=v27();v63={};v258=1 + 0 ;end if (1==v258) then v198=1 + 0 ;break;end end end if (v198==(49 -(8 + 40))) then local v259=0;local v260;while true do if (v259==0) then v260=0 + 0 ;while true do if (v260~=1) then else v198=2;break;end if (v260~=(0 + 0)) then else for v280=938 -(742 + 195) ,v62 do local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==0) then v282=0;v283=nil;v281=470 -(453 + 16) ;end if (v281==1) then v284=nil;v285=nil;v281=144 -(70 + 72) ;end if (v281==2) then while true do if ((4 -3)==v282) then v285=nil;while true do if (v283==(2 -1)) then if (v284==(1 -0)) then v285=v25()~=(0 + 0) ;elseif (v284==(5 -3)) then v285=v28();elseif (v284==3) then v285=v29();end v63[v280]=v285;break;end if (v283==(0 -0)) then local v297=0 + 0 ;local v298;while true do if (v297==(0 + 0)) then v298=0;while true do if (0==v298) then local v305=778 -(518 + 260) ;while true do if (v305==1) then v298=1;break;end if (v305==(0 + 0)) then v284=v25();v285=nil;v305=1 + 0 ;end end end if (v298==1) then v283=1 + 0 ;break;end end break;end end end end break;end if (v282==0) then local v290=0;while true do if (0==v290) then local v299=0 + 0 ;while true do if (v299~=(1706 -(810 + 895))) then else v290=1;break;end if (v299==0) then v283=0;v284=nil;v299=1;end end end if (1==v290) then v282=1;break;end end end end break;end end end v61[3]=v25();v260=1;end end break;end end end end break;end end break;end if (v196~=0) then else v197=0 + 0 ;v198=nil;v196=1 + 0 ;end end end v119=1 + 0 ;end if (v119~=(249 -(120 + 128))) then else v114=1 + 0 ;break;end end end if (v114==(1009 -(666 + 342))) then v110=1;break;end end break;end end end end end break;end if (v56==2) then local v106=0 -0 ;local v107;while true do if (v106==(0 -0)) then v107=0 -0 ;while true do if (v107~=1) then else v56=2 + 1 ;break;end if (v107~=(1197 -(385 + 812))) then else local v117=0 -0 ;while true do if (v117==(1872 -(1157 + 714))) then v107=4 -3 ;break;end if (v117==(0 + 0)) then v61=nil;v62=nil;v117=2 -1 ;end end end end break;end end end if (v56==(0 + 0)) then local v108=0;local v109;while true do if (0==v108) then v109=0;while true do if (0~=v109) then else local v118=1653 -(305 + 1348) ;while true do if (v118~=(0 + 0)) then else v57=0 -0 ;v58=nil;v118=1;end if (v118~=(49 -(9 + 39))) then else v109=1;break;end end end if (v109==(3 -2)) then v56=3 -2 ;break;end end break;end end end end break;end if ((1 + 0)==v55) then local v96=0;while true do if (v96~=(0 -0)) then else v58=nil;v59=nil;v96=2 -1 ;end if (v96~=(2 -1)) then else v55=1975 -(596 + 1377) ;break;end end end end break;end if (v54==1) then v57=nil;v58=nil;v54=2;end if ((1301 -(549 + 750))==v54) then v59=nil;v60=nil;v54=3;end if (v54==0) then v55=0;v56=nil;v54=1;end end end local function v34(v35,v36,v37)local v64=0;local v65;local v66;local v67;while true do if (v64==0) then v65=v35[1];v66=v35[2];v64=1;end if (1==v64) then v67=v35[3];return function(...)local v80=1;local v81= -1;local v82={...};local v83=v12("#",...) -1 ;local function v84()local v85=v65;local v86=v66;local v87=v67;local v88=v32;local v89={};local v90={};local v91={};for v97=0 + 0 ,v83 do if (((1972 -508)>=1349) and (v97>=v87)) then v89[v97-v87 ]=v82[v97 + (445 -(60 + 97 + 287)) ];else v91[v97]=v82[v97 + (1 -0) ];end end local v92=(v83-v87) + (4 -(1 + 2)) ;local v93;local v94;while true do local v98=1173 -(938 + 235) ;local v99;while true do if (((7936 -4343)<=(4151 + 28)) and (v98==(902 -(286 + 616)))) then v99=0;while true do if (((1832 -(894 + 143))>=((349 + 235) -(41 + 21 + 132))) and (v99==(1506 -(1066 + 439)))) then if ((v94<=(45 -31)) or ((5206 -(134 + 377))<2158)) then if (((9031 -5843)==(8447 -5259)) and (v94<=(5 + 1))) then if (((1326 -(1114 + 81))<(2103 + 2104)) and (v94<=(1 + 1))) then if (((5730 -(257 + 1044))>=(1487 + 2582)) and (v94<=(0 -0))) then for v121=v93[5 -3 ],v93[1309 -(996 + 310) ] do v91[v121]=nil;end elseif ((v94>(677 -(463 + 213))) or (3905>=(1775 + 2511))) then v80=v93[3];elseif ((v91[v93[5 -3 ]]==v91[v93[12 -8 ]]) or ((1438 + 956)<=(2012 -(97 + 628)))) then v80=v80 + 1 ;else v80=v93[1693 -(228 + 1462) ];end elseif (((4493 -(761 + 533))<3839) and (v94<=(1340 -(1010 + 326)))) then if ((((951 -(904 + 28)) + 11)<=(2680 -(217 + 239))) and (v94>(3 + 0))) then local v124=0 -0 ;local v125;local v126;while true do if (((3532 -(185 + 272))>=1003) and (v124==(0 + (1524 -(984 + 540))))) then v125=0 -0 ;v126=nil;v124=4 -3 ;end if ((((1638 + 1103) -1949)<(1935 -(375 + (2287 -(1281 + 364))))) and (v124==(1999 -(523 + 1475)))) then while true do if ((3375==(652 + 2723)) and (v125==(0 -0))) then v126=v93[1797 -((422 -181) + 1554) ];v91[v126]=v91[v126](v13(v91,v126 + (2 -1) ,v93[814 -(511 + 300) ]));break;end end break;end end else v91[v93[836 -(294 + 540) ]]=v93[1 + 2 ]~=0 ;end elseif ((v94>(12 -7)) or ((4147 -(95 + (1538 -(54 + 118))))<=(330 -(461 -249)))) then local v128=0;local v129;while true do if ((v128==((0 -0) -0)) or ((4755 -(346 + 455 + 412))==3774)) then v129=v93[398 -(128 + 268) ];do return v13(v91,v129,v129 + v93[6 -3 ] );end break;end end else v91[v93[2]][v93[(91 -(75 + 13)) + 0 ]]=v91[v93[11 -7 ]];end elseif ((v94<=(10 + 0)) or ((1272 + 2701)<3250)) then if (((210 + 967 + 741)>=(1762 -(137 + (358 -(111 + 15))))) and (v94<=(132 -(7 + 117)))) then if ((v94==7) or ((386 + 1002)<=(737 -(30 + 11)))) then local v132=0;local v133;local v134;local v135;local v136;local v137;while true do if (((49 + 753)==(371 + 431)) and (v132==(0 + 0))) then v133=0 -0 ;v134=nil;v132=2 -(3 -2) ;end if (((1761 + 1025)<(1667 + 2280)) and (v132==(2 -0))) then v137=nil;while true do if ((v133==(2 + 0)) or ((433 -275)>322)) then for v225=v134,v81 do local v226=1995 -(1156 + 839) ;while true do if ((((1322 -1027) + 3139)>(951 -386)) and (v226==(792 -(368 + 424)))) then v137=v137 + (1 -0) ;v91[v225]=v135[v137];break;end end end break;end if (((11994 -7738)>(3579 -(449 + 1214))) and (v133==(0 -0))) then local v212=0;while true do if ((1==v212) or (((3635 -(1706 + 1)) -533)>3036)) then v133=3 -2 ;break;end if ((v212==0) or ((2488 + 446)>=(4217 -((477 -312) + 71)))) then v134=v93[1 + 1 ];v135,v136=v88(v91[v134](v13(v91,v134 + (3 -2) ,v93[2 + 1 ])));v212=1 + 0 ;end end end if (((6940 -4452)>=((1219 + 2808) -(138 + 1791))) and (v133==(1826 -(442 + 1383)))) then local v213=(0 + 0) -(0 + 0) ;while true do if ((1383>=(71 + 113 + 1009)) and (v213==(0 -0))) then v81=(v136 + v134) -(1 + 0) ;v137=0 -0 ;v213=1 + 0 ;end if (((1184 -(344 + 209))==(31 + 600)) and (v213==(2 -1))) then v133=696 -(562 + 132) ;break;end end end end break;end if (((1 + 0)==v132) or (((3701 -1216) -(789 + 27))<((328 + 1896) -1155))) then v135=nil;v136=nil;v132=2 + 0 ;end end else v91[v93[8 -6 ]][v93[3]]=v93[1806 -(400 + 1402) ];end elseif (((5821 -(378 + 1452))==(4820 -(61 + 768))) and (v94>(21 -12))) then local v140=0 -0 ;local v141;local v142;local v143;while true do if (((89 + 504)<=(2152 + 88)) and (v140==(1441 -(1068 + 373)))) then v141=0 + 0 ;v142=nil;v140=1;end if ((v140==(3 -2)) or (4576==((421 + 1513) -((1971 -1091) + 147)))) then v143=nil;while true do if (((749 + 249)<=(22 + 1761)) and (v141==0)) then local v214=1031 -(535 + 496) ;while true do if (((1349 -(278 + 1071))==v214) or ((4981 -(1079 + 917))>(14648 -10515))) then v142=198 -(98 + 100) ;v143=nil;v214=218 -(41 + 176) ;end if ((1==v214) or ((813 + 156)==((1718 -(168 + 1283)) + 1817))) then v141=1;break;end end end if ((v141==1) or ((13418 -9808)<(2147 + 419))) then while true do if (((608 + 2697)<4558) and (v142==(0 + 0))) then v143=v93[2 -(1770 -(1354 + 416)) ];v91[v143]=v91[v143]();break;end end break;end end break;end end else do return v91[v93[2 + (1306 -(244 + 1062)) ]];end end elseif ((4822>((383 + 10635) -6337)) and (v94<=12)) then if ((v94>11) or (891>=(318 + 2132))) then v91[v93[597 -(498 + 97) ]]=v91[v93[7 -4 ]];else v91[v93[1598 -((2861 -(1252 + 78)) + 65) ]]=v91[v93[8 -5 ]][v93[6 -2 ]];end elseif (((13372 -10027)>=(11 + 39 + 352)) and (v94==((231 -(120 + 66)) -32))) then local v148=598 -(292 + 306) ;local v149;local v150;local v151;local v152;while true do if ((v148==(390 -(84 + 306))) or ((1 -0)>=(224 -126))) then v149=0 + 0 ;v150=nil;v148=3 -2 ;end if (((2134 -712)<(1381 + 1850)) and (v148==(1 + 0 + 1))) then while true do if (((1489 + 375)<(5269 -(306 + 1523))) and (v149==(188 -((1487 -(1335 + 140)) + 175)))) then v152=nil;while true do if ((v150==(177 -(53 + 124))) or ((2684 + 321)>=3192)) then local v235=0 + 0 ;while true do if (((3533 -2066)>(945 -(56 + 95))) and (v235==1)) then v150=1;break;end if ((v235==0) or ((2853 -(378 + 1506))>=(18539 -(282 + 13556)))) then local v261=0;while true do if ((v261==0) or (3584<=1253)) then v151=v93[1 + 1 + 0 ];v152=v91[v93[3]];v261=1 + 0 ;end if (((2 -1)==v261) or ((539 + 2441)==(1932 -1416))) then v235=1 + 0 ;break;end end end end end if (((1926 -(331 + 68))>(1225 -(56 + 218))) and (v150==1)) then v91[v151 + 1 + 0 ]=v152;v91[v151]=v152[v93[4]];break;end end break;end if (((3883 + 780 + 248)>=(4054 -1333)) and (v149==(0 -0))) then local v215=(1603 -(1021 + 582)) + 0 ;while true do if ((v215==(0 -0)) or ((1843 -((363 -236) + 183))==(1366 + 201))) then v150=0 -0 ;v151=nil;v215=1 + 0 ;end if (((1523 -806)<(4325 -(774 + 998))) and (v215==(586 -(40 + 545)))) then v149=726 -(630 + 95) ;break;end end end end break;end if ((1200==(1477 -((7 -2) + 272))) and (v148==1)) then v151=nil;v152=nil;v148=518 -(69 + 447) ;end end else local v153=1396 -(801 + 595) ;local v154;while true do if ((v153==(0 -0)) or ((540 + 2806)<2037)) then v154=v93[510 -(148 + (724 -364)) ];v91[v154](v13(v91,v154 + 1 + 0 ,v93[(14 + 0) -11 ]));break;end end end elseif ((v94<=22) or ((1428 + 2773)<(1703 -(994 + 193)))) then if (((308 -163)<=(1983 -(759 + 134))) and (v94<=(30 -(1925 -(1882 + 31))))) then if ((v94<=(564 -(115 + 433))) or ((5153 -(258 + 79))<4591)) then if (((3962 -(146 + 607))<4053) and (v94==((1235 -(1160 + 60)) + 0))) then v91[v93[2]]=v37[v93[2 + 1 ]];else local v157=0 -0 ;local v158;while true do if ((((3774 + 921) -(8 + 206))>=2758) and (v157==((1533 -(1220 + 313)) -0))) then v158=v93[(7 -5) + 0 ];v91[v158]=v91[v158](v91[v158 + 1 + 0 ]);break;end end end elseif ((v94==17) or ((8589 -5218)<=(1977 + (2436 -(1423 + 23))))) then local v159=0 -0 ;local v160;local v161;local v162;local v163;local v164;while true do if ((v159==(614 -(517 + 97))) or ((1308 + 1178)==(12 + 35))) then v160=0 + 0 ;v161=nil;v159=1 -0 ;end if ((1566>=(680 + 102)) and (v159==2)) then v164=nil;while true do if (((1309 + 2660 + 311)>=(1281 -(520 + 440))) and (v160==(1569 -(746 + 821)))) then while true do if (((9254 -7004)>((11369 -8257) -(1001 + (541 -315)))) and (v161==(0 -0))) then local v239=864 -(374 + 490) ;local v240;while true do if (((0 -0)==v239) or (1671==(2367 -1201))) then v240=597 -(323 + 274) ;while true do if ((1==v240) or ((13429 -9073)==(1036 + 354))) then v161=2 -1 ;break;end if (((6325 -(6113 -(954 + 351)))>=1286) and (v240==(0 -0))) then v162=v93[2 + 0 ];v163={v91[v162](v91[v162 + (747 -(302 + 444)) ])};v240=1;end end break;end end end if ((v161==(1 + 0)) or ((6557 -5172)==(10596 -5827))) then v164=1839 -(322 + 1517) ;for v250=v162,v93[4 + 0 ] do local v251=872 -(67 + 805) ;local v252;local v253;while true do if ((v251==(0 -0)) or ((1611 + 2899)>=4653)) then v252=(0 -0) + 0 ;v253=nil;v251=3 -(1 + 1) ;end if (((6063 -3907)==2156) and (v251==(1 -0))) then while true do if ((v252==(325 -(31 + 294))) or (2143>=(5509 -((321 -212) + 891)))) then v253=0 + 0 ;while true do if ((v253==(0 -0)) or ((3232 -(127 + 188))<=1318)) then v164=v164 + 1 ;v91[v250]=v163[v164];break;end end break;end end break;end end end break;end end break;end if (((11318 -8313)<(5279 -(1075 + 198))) and (v160==(0 -0))) then local v216=0 + 0 ;while true do if (((3050 -(693 + 174))<=(11549 -7433)) and (v216==(1 + 0))) then v160=1 -0 ;break;end if ((v216==(230 -(206 + 24))) or ((852 + 176)>(13438 -(10153 -(169 + 465))))) then v161=(28 + 1088) -(946 + 170) ;v162=nil;v216=1 + 0 ;end end end if (((534 + 1330)==((4626 -(1183 + 254)) -(847 + 478))) and (v160==(1 + 0))) then v163=nil;v164=nil;v160=2;end end break;end if ((v159==(1 -0)) or ((5320 -(767 + (1821 -(70 + 804))))==(225 + (2377 -(922 + 896))))) then v162=nil;v163=nil;v159=2 + 0 ;end end else v91[v93[4 -2 ]]=v93[1539 -(5 + 1531) ];end elseif (((545 + 480)<=(861 + 304)) and (v94<=20)) then if (((1845 + 752)==2597) and (v94>(7 + 12))) then do return;end else v91[v93[2]]();end elseif (((109 + 716 + 2061)<3104) and (v94>(3 + 18))) then v91[v93[4 -2 ]]=v34(v86[v93[(346 + 18) -(15 + 346) ]],nil,v37);else local v168=0 + 0 ;local v169;local v170;local v171;local v172;while true do if (((860 + 373)>1021) and ((0 + 0)==v168)) then v169=645 -(104 + 541) ;v170=nil;v168=366 -(332 + 33) ;end if ((v168==(1186 -(331 + 854))) or ((4201 -(1135 + 85))>3363)) then v171=nil;v172=nil;v168=1 + (461 -(393 + 67)) ;end if ((2456>(3196 -(804 + 1194))) and (v168==(6 -4))) then while true do if ((v169==(0 -0)) or ((893 -(14 + 1 + 39))>(1066 + 1697))) then v170=(692 -(322 + 370)) -0 ;v171=nil;v169=1 -0 ;end if ((v169==(1 + 0 + 0)) or ((7413 -3607)<(207 + 130))) then v172=nil;while true do if ((3311>((3883 -2055) + 796)) and (v170==0)) then local v241=0 -0 ;local v242;while true do if ((v241==(0 -0)) or (1586>((6421 -(251 + 883)) -(527 + 103)))) then v242=0;while true do if (((0 + 0)==v242) or (((5386 + 5342) -6909)<=(1970 -(510 + 1090)))) then local v272=1107 -((2236 -1429) + 300) ;while true do if (((2212 -(668 + 43))<=(1627 + 849)) and ((1886 -(421 + 1465))==v272)) then v171=v93[7 -(3 + 1) ];v172=v91[v171];v272=1 + 0 ;end if ((v272==(447 -(191 + 255))) or (((3991 -(818 + 95)) -(413 + 96))>=(5648 -(260 + 910)))) then v242=1 -0 ;break;end end end if (((2152 + 2578)>=(686 + 428)) and (v242==((2693 -(78 + 870)) -(1101 + 643)))) then v170=(1710 -890) -(408 + 411) ;break;end end break;end end end if ((v170==(1 + 0)) or ((6419 -2855)==(2093 -(1051 + 317)))) then for v254=v171 + (1942 -(1093 + 848)) ,v93[4] do v172=v172   .. v91[v254] ;end v91[v93[2 + 0 ]]=v172;break;end end break;end end break;end end end elseif ((v94<=(77 -51)) or (((10064 -7060) -1052)<(1440 + 407))) then if ((v94<=(10 + 14)) or (1583>=3321)) then if (((1804 -(1481 + 282))==41) and (v94==23)) then local v173=0 + 0 ;local v174;local v175;local v176;local v177;local v178;while true do if ((v173==(0 + 0)) or ((5302 -3408)<(2584 -(4002 -2568)))) then v174=0 + 0 ;v175=nil;v173=1 -(0 + 0) ;end if ((v173==1) or ((3241 -2203)>=4177)) then v176=nil;v177=nil;v173=2 -0 ;end if ((1537<(4683 -(277 + 1617))) and (v173==(3 -1))) then v178=nil;while true do if ((v174==(1599 -(553 + 1046))) or ((11599 -7192)==2778)) then local v217=0 -0 ;while true do if (((3833 -(521 + 1319))<=3865) and (v217==(0 -0))) then v175=v93[2];v176,v177=v88(v91[v175](v91[v175 + 1 ]));v217=1;end if ((v217==(2 -1)) or ((5365 -(1127 + (180 -139)))<2387)) then v174=759 -((1135 -(220 + 217)) + (103 -43)) ;break;end end end if (((9633 -6077)==(4881 -1325)) and (v174==(2 -1))) then local v218=0 + 0 ;while true do if (((8518 -5133)>(2661 -917)) and (v218==((1668 -(1144 + 524)) -0))) then v81=(v177 + v175) -(1 + 0) ;v178=0 -(1379 -(89 + 1290)) ;v218=1;end if ((((342 -238) + 388)==(1071 -(211 + 368))) and (v218==(1 + 0))) then v174=2 + 0 ;break;end end end if ((4153>=(2836 -1264)) and (v174==(2 + 0))) then for v227=v175,v81 do local v228=291 -(258 + 33) ;local v229;while true do if (((4634 -(117 + 55))>=(424 + 88)) and (v228==(0 + 0))) then v229=0 + 0 ;while true do if (((7887 -4824)>=(2616 -1238)) and (v229==(270 -(59 + 211)))) then v178=v178 + 1 ;v91[v227]=v176[v178];break;end end break;end end end break;end end break;end end else local v179=0;local v180;local v181;while true do if ((v179==(0 + (518 -(385 + 133)))) or ((1853 + (4990 -3632))>(5416 -(154 + 1605 + 166)))) then v180=0 -0 ;v181=nil;v179=725 -(681 + 43) ;end if ((v179==(4 -3)) or ((1192 + 199)<(1830 -(735 + 292)))) then while true do if (((1401 -(1205 + 196))==v180) or ((5430 -(462 + (1526 -(137 + 74))))<1922)) then v181=v93[2];v91[v181]=v91[v181](v13(v91,v181 + (162 -(118 + 43)) ,v81));break;end end break;end end end elseif ((((1854 -1396) + 80)==538) and (v94==(1691 -(8 + 716 + 942)))) then if ((v91[v93[7 -5 ]]==v93[4]) or (1148==(5444 -(1349 + 33)))) then v80=v80 + (2 -1) ;else v80=v93[2 + 1 ];end else local v182=(1710 -(219 + 1491)) + 0 ;local v183;local v184;while true do if ((((6599 -(304 + 43)) -3246)<(6208 -(1067 + 472))) and (v182==(1 + 0))) then while true do if ((3926>((5084 -(1439 + 264)) -(1325 + 304))) and (v183==0)) then v184=v93[5 -3 ];v91[v184](v91[v184 + 1 + 0 ]);break;end end break;end if ((v182==0) or ((485 + 1499)<=1499)) then local v207=0;while true do if (((2401 + 2166)<(5941 -(327 + (2807 -(1593 + 255))))) and (v207==(496 -(373 + 122 + 0)))) then v182=1;break;end if ((v207==(1641 -(735 + 906))) or ((172 + 2447)<=(5035 -2790))) then v183=0 + 0 ;v184=nil;v207=1 + 0 ;end end end end end elseif ((v94<=28) or (3715<=(2090 -(4 + 1714)))) then if ((2002==(3075 -1073)) and (v94>(11 + 16))) then local v185=0 -0 ;local v186;local v187;local v188;local v189;local v190;local v191;while true do if ((1525<(4427 -(425 + 235))) and (v185==(1 + 0))) then v188=nil;v189=nil;v185=460 -(237 + 221) ;end if (((3975 -1665)>=(38 + 1011)) and (v185==(1074 -(55 + 1016)))) then while true do if ((v186==(447 -(46 + 401))) or (1811==(2486 + 400))) then local v222=0;while true do if ((((2448 -566) + 1800)>(2866 + 592)) and (v222==0)) then v187=v93[415 -(380 + 33) ];v188=v93[3 + 1 ];v222=1 + 0 ;end if ((2177>2005) and (v222==(97 -(20 + 76)))) then v186=929 -(394 + 534) ;break;end end end if ((v186==(1020 -(83 + 935))) or ((5717 -(177 + 740))==133)) then local v223=0;while true do if ((v223==(0 + 0)) or ((4144 -(4379 -(412 + 812)))>4818)) then for v255=(99 + 137) -(133 + 102) ,v188 do v91[v189 + v255 ]=v190[v255];end v191=v190[1];v223=119 -(98 + 20) ;end if ((v223==(1 -0)) or (2395>=(3236 -(130 + 234)))) then v186=2 + 1 ;break;end end end if ((v186==(1 + 1 + 1)) or ((10952 -8501)<1984)) then if (v191 or (161<=(594 -438))) then local v230=1118 -(75 + 1043) ;local v231;while true do if (((2156 -(345 + 1216))<=(2629 -(508 + (1577 -(79 + 291))))) and (v230==0)) then v231=0 -0 ;while true do if ((v231==(0 -0)) or ((34 + 134)>=(9783 -6026))) then v91[v189]=v191;v80=v93[1 + 2 ];break;end end break;end end else v80=v80 + 1 ;end break;end if ((v186==(699 -(84 + 154 + 460))) or ((209 + 418)==(5103 -(295 + 51)))) then local v224=1847 -(772 + 1075) ;while true do if (((2241 -(73 + 120))>=(759 + 1080)) and ((1 + 0)==v224)) then v186=2;break;end if (((5432 -(1331 + 230))>2893) and (v224==0)) then v189=v187 + 1 + 1 ;v190={v91[v187](v91[v187 + 1 ],v91[v189])};v224=1 + (0 -0) ;end end end end break;end if ((v185==2) or ((678 + 291)>(584 + 476))) then v190=nil;v191=nil;v185=(47 + 194) -(169 + 69) ;end if ((v185==0) or ((1337 -(52 + 96))==(3771 -(196 + 274)))) then v186=0 -0 ;v187=nil;v185=1 -0 ;end end elseif (((5084 -1907)>=(605 -315)) and v91[v93[2 -0 ]]) then v80=v80 + (1173 -(284 + 888)) + 0 ;else v80=v93[1693 -(984 + 706) ];end elseif (((9729 -5691)>=(3824 -(482 + 81))) and (v94==29)) then v91[v93[2]]=v91[v93[1470 -((1182 -(21 + 234)) + 540) ]][v91[v93[1141 -(39 + 1058 + 40) ]]];elseif (((4459 -(212 + 57))<(5966 -(63 + 1491))) and (v93[1074 -(879 + (857 -(176 + 488))) ]==v91[v93[88 -(76 + 8) ]])) then v80=v80 + 1 + 0 + 0 ;else v80=v93[5 -(4 -2) ];end v80=v80 + (2 -1) ;break;end if ((v99==(0 + 0)) or ((1465 -677)<=(1554 -((1177 -785) + 1033)))) then v93=v85[v80];v94=v93[1 + 0 ];v99=1;end end break;end end end end A,B=v32(v11(v84));if  not A[1] then local v100=v35[4][v80] or "?" ;error("Script error at ["   .. v100   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
