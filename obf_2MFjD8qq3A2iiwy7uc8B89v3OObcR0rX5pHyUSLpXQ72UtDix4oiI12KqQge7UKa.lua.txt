--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 6) then
			v23 = nil;
			v23 = function(v25, v26, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 1) then
						v40 = nil;
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v35 = 2;
					end
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v39 = nil;
						v35 = 1;
					end
					if (v35 == 3) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 2) then
									if (v36 == 1) then
										local v53 = 0;
										while true do
											if (v53 == 0) then
												v39 = nil;
												v39 = function(v61, v62, v63)
													if v63 then
														local v107 = 0;
														local v108;
														local v109;
														while true do
															if (v107 == 1) then
																while true do
																	if (0 == v108) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v109 = (v61 / ((((813 + 74) - (266 + 614)) - (1 + 4 + 0)) ^ (v62 - (1006 - (15 + ((2872 - (109 + 107)) - (535 + 1131))))))) % ((1004 - ((1676 - (222 + 577)) + (734 - (38 + 571)))) ^ (((v63 - (2 - (1 + 0))) - (v62 - (2 - 1))) + (1967 - (583 + 1383)) + 0));
																				return v109 - (v109 % (1 + 0));
																			end
																		end
																	end
																end
																break;
															end
															if (v107 == 0) then
																v108 = 0;
																v109 = nil;
																v107 = 1;
															end
														end
													else
														local v110 = 0;
														local v111;
														local v112;
														while true do
															if (v110 == 1) then
																while true do
																	if (v111 == 0) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v112 = (7 - 5) ^ (v62 - 1);
																				return (((v61 % (v112 + v112)) >= v112) and (1076 - (829 + (709 - (127 + 336))))) or (0 - 0);
																			end
																		end
																	end
																end
																break;
															end
															if (v110 == 0) then
																v111 = 0 + 0;
																v112 = nil;
																v110 = 1;
															end
														end
													end
												end;
												v53 = 1;
											end
											if (v53 == 1) then
												v40 = nil;
												v36 = 2;
												break;
											end
										end
									end
									if (v36 == 5) then
										local v54 = 0;
										while true do
											if (v54 == 1) then
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v36 = 6;
												break;
											end
											if (0 == v54) then
												v45 = v42;
												v46 = nil;
												v54 = 1;
											end
										end
									end
									v51 = 3;
								end
								if (v51 == 3) then
									if (4 == v36) then
										local v55 = 0;
										while true do
											if (v55 == 1) then
												v44 = function(v64)
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													while true do
														if (v69 == 0) then
															v70 = 0 + 0;
															v71 = nil;
															v69 = 1;
														end
														if (v69 == 1) then
															v72 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (v70 == 1) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					v70 = 2;
																					break;
																				end
																				if (v128 == 0) then
																					v71 = v11(v25, v37, (v37 + v64) - (1 + 0));
																					v37 = v37 + v64;
																					v128 = 1;
																				end
																			end
																		end
																		if (v70 == (0 - 0)) then
																			local v129 = 0;
																			while true do
																				if (v129 == 0) then
																					v71 = nil;
																					if not v64 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (0 == v173) then
																								v174 = 0;
																								while true do
																									if (v174 == 0) then
																										v64 = v42();
																										if (v64 == ((1775 - (77 + 1698)) - 0)) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v129 = 1;
																				end
																				if (v129 == 1) then
																					v70 = 1;
																					break;
																				end
																			end
																		end
																		v118 = 1;
																	end
																	if (v118 == 1) then
																		if (v70 == 2) then
																			local v130 = 0;
																			while true do
																				if (0 == v130) then
																					v72 = {};
																					for v151 = 460 - (((3901 - 3009) - (483 + 244)) + 294), #v71 do
																						v72[v151] = v10(v9(v11(v71, v151, v151)));
																					end
																					v130 = 1;
																				end
																				if (v130 == 1) then
																					v70 = 26 - (12 + 11);
																					break;
																				end
																			end
																		end
																		if (v70 == 3) then
																			return v14(v72);
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v36 = 5;
												break;
											end
											if (0 == v55) then
												v43 = function()
													local v73 = 0;
													local v74;
													local v75;
													local v76;
													local v77;
													local v78;
													local v79;
													local v80;
													while true do
														if (v73 == 3) then
															v80 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 1) then
																		if (v74 == 3) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					if (v79 == (0 + 0)) then
																						if (v78 == ((130 + 307 + 100) - ((659 - (331 + 85)) + (1544 - ((1695 - 1117) + (1081 - 409)))))) then
																							return v80 * 0;
																						else
																							local v176 = 0;
																							local v177;
																							while true do
																								if (v176 == 0) then
																									v177 = 0;
																									while true do
																										if (v177 == (0 + 0)) then
																											v79 = 879 - (876 + (9 - 7));
																											v77 = 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v79 == (2325 - (226 + 52))) then
																						return ((v78 == ((0 + 0) - ((0 + 0) - 0))) and (v80 * ((70 - ((599 - (49 + 483)) + ((803 - (300 + 108)) - (155 + 238)))) / 0))) or (v80 * NaN);
																					end
																					return v16(v80, v79 - ((3502 - (599 + 622)) - (313 + 316 + (1861 - 1232)))) * (v77 + (v78 / ((1 + 1 + (339 - (296 + 43)) + 0 + 0) ^ (36 + (35 - 19)))));
																				end
																			end
																		end
																		if (v74 == 0) then
																			local v132 = 0;
																			while true do
																				if (v132 == 1) then
																					v74 = 1;
																					break;
																				end
																				if (v132 == 0) then
																					v75 = v42();
																					v76 = v42();
																					v132 = 1;
																				end
																			end
																		end
																		break;
																	end
																	if (v119 == 0) then
																		if (v74 == 1) then
																			local v133 = 0;
																			while true do
																				if (1 == v133) then
																					v74 = 5 - 3;
																					break;
																				end
																				if (v133 == 0) then
																					v77 = 1;
																					v78 = (v39(v76, 356 - ((1469 - (1137 + 259)) + 255 + 27), (113 - (33 + 48)) - (1594 - (935 + 647))) * ((2 + 0 + 0 + 0) ^ ((1571 - (1369 + 170)) + 0 + 0))) + v75;
																					v133 = 1;
																				end
																			end
																		end
																		if (v74 == 2) then
																			local v134 = 0;
																			while true do
																				if (v134 == 0) then
																					v79 = v39(v76, 10 + ((2506 - (411 + 1142)) - (89 + (2034 - 1181))), ((3561 - 1131) - (517 + (2965 - (335 + 1285)))) - (103 + (1999 - (175 + 1390))));
																					v80 = ((v39(v76, (72 - (35 + 17)) + 12 + 0) == (532 - (176 + (1947 - (232 + 222 + 484 + 654))))) and -(1 + (0 - 0))) or (1 + 0);
																					v134 = 1;
																				end
																				if (v134 == 1) then
																					v74 = 3 + 0;
																					break;
																				end
																			end
																		end
																		v119 = 1;
																	end
																end
															end
															break;
														end
														if (1 == v73) then
															v76 = nil;
															v77 = nil;
															v73 = 2;
														end
														if (v73 == 2) then
															v78 = nil;
															v79 = nil;
															v73 = 3;
														end
														if (v73 == 0) then
															v74 = 0;
															v75 = nil;
															v73 = 1;
														end
													end
												end;
												v44 = nil;
												v55 = 1;
											end
										end
									end
									if (2 == v36) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v41 = function()
													local v81 = 0;
													local v82;
													local v83;
													local v84;
													while true do
														if (v81 == 0) then
															v82 = 0 - 0;
															v83 = nil;
															v81 = 1;
														end
														if (v81 == 1) then
															v84 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v82 == 0) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v83, v84 = v9(v25, v37, v37 + 2);
																					v37 = v37 + 2;
																					v135 = 1;
																				end
																				if (v135 == 1) then
																					v82 = 1 + 0;
																					break;
																				end
																			end
																		end
																		if (v82 == (3 - 2)) then
																			return (v84 * ((3010 - 1817) - (2075 - 1138))) + v83;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v36 = 3;
												break;
											end
											if (0 == v56) then
												v40 = function()
													local v85 = 0;
													local v86;
													local v87;
													while true do
														if (v85 == 1) then
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 0) then
																		if (v86 == (1 + 0)) then
																			return v87;
																		end
																		if (v86 == (241 - (191 + 50))) then
																			local v136 = 0;
																			while true do
																				if (v136 == 1) then
																					v86 = 1;
																					break;
																				end
																				if (0 == v136) then
																					v87 = v9(v25, v37, v37);
																					v37 = v37 + (500 - ((601 - (76 + 281)) + 255));
																					v136 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v85 == 0) then
															v86 = 0;
															v87 = nil;
															v85 = 1;
														end
													end
												end;
												v41 = nil;
												v56 = 1;
											end
										end
									end
									break;
								end
								if (v51 == 1) then
									if (6 == v36) then
										local v57 = 0;
										while true do
											if (v57 == 0) then
												v47 = nil;
												v47 = function()
													local v88 = 0;
													local v89;
													local v90;
													local v91;
													local v92;
													local v93;
													local v94;
													local v95;
													while true do
														if (v88 == 3) then
															v95 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (v89 == 2) then
																			local v137 = 0;
																			while true do
																				if (v137 == 1) then
																					for v153 = 1, v42() do
																						local v154 = 0;
																						local v155;
																						local v156;
																						while true do
																							if (v154 == 1) then
																								while true do
																									if (v155 == 0) then
																										v156 = v40();
																										if (v39(v156, (3780 - 2432) - ((173 - 50) + (3536 - 2312)), 1) == (0 + (0 - 0))) then
																											local v184 = 0;
																											local v185;
																											local v186;
																											local v187;
																											local v188;
																											while true do
																												if (v184 == 0) then
																													v185 = 0;
																													v186 = nil;
																													v184 = 1;
																												end
																												if (v184 == 2) then
																													while true do
																														if (v185 == 1) then
																															local v203 = 0;
																															while true do
																																if (v203 == 0) then
																																	v188 = {v41(),v41(),nil,nil};
																																	if (v186 == ((0 - 0) - 0)) then
																																		local v216 = 0;
																																		local v217;
																																		while true do
																																			if (v216 == 0) then
																																				v217 = 0;
																																				while true do
																																					if (0 == v217) then
																																						v188[3] = v41();
																																						v188[1479 - ((71 - 44) + 1448)] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v186 == (1 + (0 - 0))) then
																																		v188[7 - 4] = v42();
																																	elseif (v186 == (1 + 1)) then
																																		v188[9 - (6 + 0)] = v42() - ((1 + (1102 - (557 + 544))) ^ ((59 - 46) + 3));
																																	elseif (v186 == ((109 + 43) - ((233 - 107) + 4 + 19))) then
																																		local v229 = 0;
																																		local v230;
																																		while true do
																																			if (v229 == 0) then
																																				v230 = 0;
																																				while true do
																																					if (v230 == 0) then
																																						v188[3] = v42() - (((76 + 521) - (303 + 292)) ^ ((27 - 21) + (29 - 19)));
																																						v188[4] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v203 = 1;
																																end
																																if (v203 == 1) then
																																	v185 = 2;
																																	break;
																																end
																															end
																														end
																														if (v185 == 3) then
																															if (v39(v187, 9 - 6, 9 - 6) == 1) then
																																v188[4] = v95[v188[578 - ((1929 - (241 + 1591)) + 183 + 294)]];
																															end
																															v90[v153] = v188;
																															break;
																														end
																														if (v185 == 2) then
																															local v205 = 0;
																															while true do
																																if (v205 == 0) then
																																	if (v39(v187, 1 + 0 + (0 - 0), 1) == 1) then
																																		v188[2] = v95[v188[1 + (1648 - (1214 + 433))]];
																																	end
																																	if (v39(v187, (1014 - (552 + 460)) - 0, 1 + 1) == (4 - 3)) then
																																		v188[1 + 2] = v95[v188[3]];
																																	end
																																	v205 = 1;
																																end
																																if (v205 == 1) then
																																	v185 = 3;
																																	break;
																																end
																															end
																														end
																														if (0 == v185) then
																															local v206 = 0;
																															while true do
																																if (v206 == 0) then
																																	v186 = v39(v156, 1297 - (948 + 347), 6 - 3);
																																	v187 = v39(v156, 3 + 1, 1023 - ((2399 - (946 + 843)) + (2356 - (1160 + 789))));
																																	v206 = 1;
																																end
																																if (v206 == 1) then
																																	v185 = 1;
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																												if (v184 == 1) then
																													v187 = nil;
																													v188 = nil;
																													v184 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (v154 == 0) then
																								v155 = 0;
																								v156 = nil;
																								v154 = 1;
																							end
																						end
																					end
																					v89 = 3;
																					break;
																				end
																				if (v137 == 0) then
																					for v157 = 4 - 3, v94 do
																						local v158 = 0;
																						local v159;
																						local v160;
																						local v161;
																						while true do
																							if (v158 == 0) then
																								v159 = 0;
																								v160 = nil;
																								v158 = 1;
																							end
																							if (v158 == 1) then
																								v161 = nil;
																								while true do
																									if (v159 == 0) then
																										local v178 = 0;
																										while true do
																											if (v178 == 1) then
																												v159 = 1;
																												break;
																											end
																											if (v178 == 0) then
																												v160 = v40();
																												v161 = nil;
																												v178 = 1;
																											end
																										end
																									end
																									if (v159 == 1) then
																										if (v160 == 1) then
																											v161 = v40() ~= ((0 - 0) + 0);
																										elseif (v160 == (965 - (273 + 487 + 203))) then
																											v161 = v43();
																										elseif (v160 == (1 + 2)) then
																											v161 = v44();
																										end
																										v95[v157] = v161;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v93[3] = v40();
																					v137 = 1;
																				end
																			end
																		end
																		if (v89 == 3) then
																			local v138 = 0;
																			while true do
																				if (v138 == 1) then
																					return v93;
																				end
																				if (0 == v138) then
																					for v162 = (1835 - (1228 + 606)) + 0, v42() do
																						v91[v162 - (1 + 0 + 0)] = v47();
																					end
																					for v164 = 1, v42() do
																						v92[v164] = v42();
																					end
																					v138 = 1;
																				end
																			end
																		end
																		v122 = 1;
																	end
																	if (v122 == 1) then
																		if (v89 == 0) then
																			local v139 = 0;
																			while true do
																				if (v139 == 1) then
																					v92 = {};
																					v89 = 1;
																					break;
																				end
																				if (0 == v139) then
																					v90 = {};
																					v91 = {};
																					v139 = 1;
																				end
																			end
																		end
																		if (v89 == 1) then
																			local v140 = 0;
																			while true do
																				if (v140 == 0) then
																					v93 = {v90,v91,nil,v92};
																					v94 = v42();
																					v140 = 1;
																				end
																				if (v140 == 1) then
																					v95 = {};
																					v89 = 2;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v88 == 2) then
															v93 = nil;
															v94 = nil;
															v88 = 3;
														end
														if (0 == v88) then
															v89 = 0;
															v90 = nil;
															v88 = 1;
														end
														if (1 == v88) then
															v91 = nil;
															v92 = nil;
															v88 = 2;
														end
													end
												end;
												v57 = 1;
											end
											if (v57 == 1) then
												v48 = nil;
												v36 = 7;
												break;
											end
										end
									end
									if (v36 == 0) then
										local v58 = 0;
										while true do
											if (v58 == 1) then
												v25 = v12(v11(v25, 13 - 8), v7("\58\3", "\20\45\51\150"), function(v65)
													if (v9(v65, 2) == ((1563 - 625) - (20 + 802 + (1025 - (889 + 99))))) then
														local v113 = 0;
														local v114;
														while true do
															if (v113 == 0) then
																v114 = 0;
																while true do
																	if (v114 == 0) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v38 = v8(v11(v65, 2 - 1, 1));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (1 == v115) then
																while true do
																	if (v116 == 0) then
																		v117 = v10(v8(v65, 34 - (376 - (289 + 69))));
																		if v38 then
																			local v144 = 0;
																			local v145;
																			local v146;
																			while true do
																				if (0 == v144) then
																					v145 = 0;
																					v146 = nil;
																					v144 = 1;
																				end
																				if (v144 == 1) then
																					while true do
																						local v175 = 0;
																						while true do
																							if (v175 == 0) then
																								if (v145 == 1) then
																									return v146;
																								end
																								if (v145 == 0) then
																									local v180 = 0;
																									while true do
																										if (v180 == 0) then
																											v146 = v13(v117, v38);
																											v38 = nil;
																											v180 = 1;
																										end
																										if (v180 == 1) then
																											v145 = 1;
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			return v117;
																		end
																		break;
																	end
																end
																break;
															end
															if (v115 == 0) then
																v116 = 0;
																v117 = nil;
																v115 = 1;
															end
														end
													end
												end);
												v36 = 1;
												break;
											end
											if (v58 == 0) then
												v37 = 1 + 0;
												v38 = nil;
												v58 = 1;
											end
										end
									end
									v51 = 2;
								end
								if (v51 == 0) then
									if (3 == v36) then
										local v59 = 0;
										while true do
											if (v59 == 1) then
												v43 = nil;
												v36 = 4;
												break;
											end
											if (v59 == 0) then
												v42 = nil;
												v42 = function()
													local v96 = 0;
													local v97;
													local v98;
													local v99;
													local v100;
													local v101;
													while true do
														if (v96 == 2) then
															v101 = nil;
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if (0 == v97) then
																			local v141 = 0;
																			while true do
																				if (v141 == 0) then
																					v98, v99, v100, v101 = v9(v25, v37, v37 + (482 - (260 + 86 + 133)));
																					v37 = v37 + 2 + ((2509 - (474 + 846)) - ((2818 - (229 + 1653)) + (854 - 603)));
																					v141 = 1;
																				end
																				if (v141 == 1) then
																					v97 = 1;
																					break;
																				end
																			end
																		end
																		if (v97 == (1 - 0)) then
																			return (v101 * (64244222 - 47467006)) + (v100 * ((83837 - 49186) + 30885)) + (v99 * (138 + 118)) + v98;
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v96 == 1) then
															v99 = nil;
															v100 = nil;
															v96 = 2;
														end
														if (v96 == 0) then
															v97 = 0 - 0;
															v98 = nil;
															v96 = 1;
														end
													end
												end;
												v59 = 1;
											end
										end
									end
									if (v36 == 7) then
										local v60 = 0;
										while true do
											if (v60 == 0) then
												v48 = function(v66, v67, v68)
													local v102 = 0;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (1 == v102) then
															v105 = nil;
															v106 = nil;
															v102 = 2;
														end
														if (v102 == 2) then
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 0) then
																		if (0 == v103) then
																			local v142 = 0;
																			while true do
																				if (v142 == 0) then
																					v104 = v66[2 - 1];
																					v105 = v66[397 - (7 + 194 + 65 + 129)];
																					v142 = 1;
																				end
																				if (1 == v142) then
																					v103 = 1;
																					break;
																				end
																			end
																		end
																		if (v103 == 1) then
																			local v143 = 0;
																			while true do
																				if (v143 == 0) then
																					v106 = v66[847 - (795 + 49)];
																					return function(...)
																						local v166 = 0;
																						local v167;
																						local v168;
																						local v169;
																						local v170;
																						local v171;
																						local v172;
																						while true do
																							if (v166 == 3) then
																								while true do
																									if (0 == v167) then
																										local v181 = 0;
																										while true do
																											if (v181 == 1) then
																												v167 = 1;
																												break;
																											end
																											if (v181 == 0) then
																												v168 = (1187 + 254) - ((3320 - 2020) + 140);
																												v169 = -(2 - 1);
																												v181 = 1;
																											end
																										end
																									end
																									if (v167 == 2) then
																										local v182 = 0;
																										while true do
																											if (v182 == 0) then
																												v172 = nil;
																												v172 = function()
																													local v192 = 0;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													local v202;
																													while true do
																														if (v192 == 2) then
																															v199 = {};
																															for v207 = 0 - 0, v171 do
																																if (v207 >= v195) then
																																	v197[v207 - v195] = v170[v207 + (1 - 0)];
																																else
																																	v199[v207] = v170[v207 + (1304 - (1087 + 216))];
																																end
																															end
																															v200 = (v171 - v195) + (3 - 2);
																															v192 = 3;
																														end
																														if (v192 == 3) then
																															v201 = nil;
																															v202 = nil;
																															while true do
																																local v208 = 0;
																																local v209;
																																while true do
																																	if (v208 == 0) then
																																		v209 = 0;
																																		while true do
																																			if (v209 == 1) then
																																				if (v202 <= 37) then
																																					if (v202 <= (1468 - (637 + 522 + 291))) then
																																						if (v202 <= ((34 - 21) - (4 + 1))) then
																																							if (v202 <= (5 - 2)) then
																																								if (v202 <= (1 + (56 - (26 + 30)))) then
																																									if (v202 == (0 + (867 - (440 + 427)))) then
																																										if (v201[1 + 1 + (0 - 0)] < v199[v201[(1265 - 708) - (317 + 103 + 133)]]) then
																																											v168 = v168 + 1 + 0;
																																										else
																																											v168 = v201[772 - ((937 - 664) + (1591 - (396 + 699)))];
																																										end
																																									else
																																										v199[v201[(819 - (391 + 421)) - (22 - 17)]] = v201[(2289 - (797 + 250)) - (518 + 250 + 30 + 441)] ^ v199[v201[5 - 1]];
																																									end
																																								elseif (v202 > (1680 - (844 + 834))) then
																																									local v234 = 0;
																																									local v235;
																																									local v236;
																																									while true do
																																										if (v234 == 1) then
																																											while true do
																																												if (v235 == 0) then
																																													v236 = v201[(13 - 7) - 4];
																																													v199[v236] = v199[v236]();
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v234) then
																																											v235 = 0;
																																											v236 = nil;
																																											v234 = 1;
																																										end
																																									end
																																								else
																																									v199[v201[2]][v201[3]] = v199[v201[(2983 - 1352) - (1465 + 3 + 159)]];
																																								end
																																							elseif (v202 <= (4 + 1)) then
																																								if (v202 == (4 + 0)) then
																																									do
																																										return;
																																									end
																																								elseif (v199[v201[1 + 1]] > v201[947 - (633 + 310)]) then
																																									v168 = v168 + (623 - (47 + 17 + 558));
																																								else
																																									v168 = v201[3 + 0];
																																								end
																																							elseif (v202 <= 6) then
																																								local v239 = 0;
																																								local v240;
																																								local v241;
																																								local v242;
																																								local v243;
																																								while true do
																																									if (2 == v239) then
																																										while true do
																																											if (v240 == 0) then
																																												local v396 = 0;
																																												while true do
																																													if (v396 == 0) then
																																														v241 = v201[(1650 - (237 + 16)) - (761 + 634)];
																																														v242 = v199[v241];
																																														v396 = 1;
																																													end
																																													if (1 == v396) then
																																														v240 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v240 == 1) then
																																												v243 = v201[186 - (58 + 125)];
																																												for v423 = 1498 - ((2016 - (480 + 177)) + (1107 - (912 + 57))), v243 do
																																													v242[v423] = v199[v241 + v423];
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v239 == 0) then
																																										v240 = 0;
																																										v241 = nil;
																																										v239 = 1;
																																									end
																																									if (v239 == 1) then
																																										v242 = nil;
																																										v243 = nil;
																																										v239 = 2;
																																									end
																																								end
																																							elseif (v202 > ((21 + 1) - (53 - 38))) then
																																								if (v199[v201[1 + 1]] ~= v201[(2270 - (169 + 755)) - (29 + 639 + 674)]) then
																																									v168 = v168 + (933 - ((1360 - 1010) + 582));
																																								else
																																									v168 = v201[1 + 2];
																																								end
																																							else
																																								v199[v201[2 + 0]] = v199[v201[249 - (139 + 107)]] % v201[1 + 1 + 2];
																																							end
																																						elseif (v202 <= 13) then
																																							if (v202 <= ((1757 + 118) - (1223 + 642))) then
																																								if (v202 > ((4003 - 2642) - (532 + 799 + 21))) then
																																									local v244 = 0;
																																									local v245;
																																									local v246;
																																									while true do
																																										if (v244 == 1) then
																																											while true do
																																												if (0 == v245) then
																																													v246 = v199[v201[(2 - 0) + 2]];
																																													if not v246 then
																																														v168 = v168 + ((1 + 0) - 0);
																																													else
																																														local v447 = 0;
																																														local v448;
																																														while true do
																																															if (v447 == 0) then
																																																v448 = 0;
																																																while true do
																																																	if (v448 == 0) then
																																																		v199[v201[1860 - (1275 + 583)]] = v246;
																																																		v168 = v201[3];
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v244 == 0) then
																																											v245 = 0;
																																											v246 = nil;
																																											v244 = 1;
																																										end
																																									end
																																								elseif (v201[1599 - (710 + 887)] <= v201[(965 + 526) - (1147 + (1384 - 1044))]) then
																																									v168 = v168 + ((16 - 12) - 3);
																																								else
																																									v168 = v201[3 - 0];
																																								end
																																							elseif (v202 <= 11) then
																																								local v247 = 0;
																																								local v248;
																																								local v249;
																																								local v250;
																																								while true do
																																									if (v247 == 1) then
																																										v250 = nil;
																																										while true do
																																											if (1 == v248) then
																																												for v426 = (1562 - (975 + 585)) - 1, #v198 do
																																													local v427 = 0;
																																													local v428;
																																													local v429;
																																													while true do
																																														if (v427 == 0) then
																																															v428 = 0;
																																															v429 = nil;
																																															v427 = 1;
																																														end
																																														if (v427 == 1) then
																																															while true do
																																																if (v428 == 0) then
																																																	v429 = v198[v426];
																																																	for v519 = (142 + 27) - (76 + (193 - (94 + 6))), #v429 do
																																																		local v520 = 0;
																																																		local v521;
																																																		local v522;
																																																		local v523;
																																																		local v524;
																																																		while true do
																																																			if (v520 == 2) then
																																																				while true do
																																																					if (v521 == 0) then
																																																						local v540 = 0;
																																																						while true do
																																																							if (v540 == 0) then
																																																								v522 = v429[v519];
																																																								v523 = v522[3 - (2 - 0)];
																																																								v540 = 1;
																																																							end
																																																							if (v540 == 1) then
																																																								v521 = 1;
																																																								break;
																																																							end
																																																						end
																																																					end
																																																					if (v521 == 1) then
																																																						v524 = v522[2];
																																																						if ((v523 == v199) and (v524 >= v249)) then
																																																							local v542 = 0;
																																																							local v543;
																																																							while true do
																																																								if (0 == v542) then
																																																									v543 = 0;
																																																									while true do
																																																										if (v543 == 0) then
																																																											v250[v524] = v523[v524];
																																																											v522[1723 - (1191 + 332 + 199)] = v250;
																																																											break;
																																																										end
																																																									end
																																																									break;
																																																								end
																																																							end
																																																						end
																																																						break;
																																																					end
																																																				end
																																																				break;
																																																			end
																																																			if (0 == v520) then
																																																				v521 = 0;
																																																				v522 = nil;
																																																				v520 = 1;
																																																			end
																																																			if (v520 == 1) then
																																																				v523 = nil;
																																																				v524 = nil;
																																																				v520 = 2;
																																																			end
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v248 == 0) then
																																												local v399 = 0;
																																												while true do
																																													if (0 == v399) then
																																														v249 = v201[39 - (25 + (693 - (71 + 610)))];
																																														v250 = {};
																																														v399 = 1;
																																													end
																																													if (1 == v399) then
																																														v248 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v247 == 0) then
																																										v248 = 0;
																																										v249 = nil;
																																										v247 = 1;
																																									end
																																								end
																																							elseif (v202 > (1375 - ((1281 - 754) + (1836 - 1000)))) then
																																								local v334 = 0;
																																								local v335;
																																								local v336;
																																								while true do
																																									if (v334 == 0) then
																																										v335 = 0;
																																										v336 = nil;
																																										v334 = 1;
																																									end
																																									if (v334 == 1) then
																																										while true do
																																											if (v335 == 0) then
																																												v336 = v201[1 + (464 - (164 + 299))];
																																												v199[v336] = v199[v336](v199[v336 + 1]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v199[v201[2]] = v199[v201[3]][v201[143 - ((981 - (827 + 59)) + 31 + 13)]];
																																							end
																																						elseif (v202 <= 15) then
																																							if (v202 > (1767 - (492 + 1261))) then
																																								local v251 = 0;
																																								local v252;
																																								local v253;
																																								while true do
																																									if (v251 == 1) then
																																										while true do
																																											if (v252 == 0) then
																																												v253 = v201[5 - (3 - 0)];
																																												do
																																													return v21(v199, v253, v169);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v251 == 0) then
																																										v252 = 0;
																																										v253 = nil;
																																										v251 = 1;
																																									end
																																								end
																																							else
																																								v199[v201[(7 - 2) - 3]] = v201[403 - (370 + 30)] ~= (0 + 0);
																																							end
																																						elseif (v202 <= 16) then
																																							local v255 = 0;
																																							local v256;
																																							local v257;
																																							while true do
																																								if (v255 == 1) then
																																									while true do
																																										if (v256 == 0) then
																																											v257 = v201[2];
																																											v199[v257](v199[v257 + 1 + (1607 - (316 + 1291))]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v255 == 0) then
																																									v256 = 0;
																																									v257 = nil;
																																									v255 = 1;
																																								end
																																							end
																																						elseif (v202 > (41 - 24)) then
																																							local v339 = 0;
																																							local v340;
																																							local v341;
																																							while true do
																																								if (1 == v339) then
																																									while true do
																																										if (0 == v340) then
																																											local v451 = 0;
																																											while true do
																																												if (v451 == 0) then
																																													v341 = v201[(953 + 447) - (465 + 374 + (1903 - (1234 + 110)))];
																																													v169 = (v341 + v200) - ((1179 - (742 + 436)) - 0);
																																													v451 = 1;
																																												end
																																												if (1 == v451) then
																																													v340 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (1 == v340) then
																																											for v462 = v341, v169 do
																																												local v463 = 0;
																																												local v464;
																																												local v465;
																																												while true do
																																													if (v463 == 1) then
																																														while true do
																																															if (0 == v464) then
																																																v465 = v197[v462 - v341];
																																																v199[v462] = v465;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																													if (v463 == 0) then
																																														v464 = 0;
																																														v465 = nil;
																																														v463 = 1;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v339 == 0) then
																																									v340 = 0;
																																									v341 = nil;
																																									v339 = 1;
																																								end
																																							end
																																						else
																																							v199[v201[1 + 1]] = v201[(876 - (621 + 251)) - (1 + 0)];
																																						end
																																					elseif (v202 <= ((52 + 35) - 60)) then
																																						if (v202 <= (1882 - (440 + (1735 - (302 + 13))))) then
																																							if (v202 <= (11 + 9 + 0)) then
																																								if (v202 == ((1565 - (1197 + 353)) + 3 + 1)) then
																																									v199[v201[(3 + 1) - 2]] = v199[v201[2 + 1]] / v201[1641 - (610 + 1027)];
																																								else
																																									v199[v201[2]] = v68[v201[3]];
																																								end
																																							elseif (v202 > 21) then
																																								v199[v201[1 + 1]] = v201[3] + v199[v201[1331 - (646 + 681)]];
																																							else
																																								local v262 = 0;
																																								local v263;
																																								local v264;
																																								local v265;
																																								local v266;
																																								while true do
																																									if (v262 == 0) then
																																										v263 = 0;
																																										v264 = nil;
																																										v262 = 1;
																																									end
																																									if (v262 == 2) then
																																										while true do
																																											if (v263 == 1) then
																																												v266 = (0 - 0) - (0 - 0);
																																												for v430 = v264, v201[4] do
																																													local v431 = 0;
																																													local v432;
																																													while true do
																																														if (0 == v431) then
																																															v432 = 0;
																																															while true do
																																																if (v432 == 0) then
																																																	v266 = v266 + (1 - (0 + 0));
																																																	v199[v430] = v265[v266];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v263 == 0) then
																																												local v402 = 0;
																																												while true do
																																													if (v402 == 1) then
																																														v263 = 1;
																																														break;
																																													end
																																													if (v402 == 0) then
																																														v264 = v201[(1192 - (65 + 1122)) - 3];
																																														v265 = {v199[v264](v21(v199, v264 + 1, v169))};
																																														v402 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (1 == v262) then
																																										v265 = nil;
																																										v266 = nil;
																																										v262 = 2;
																																									end
																																								end
																																							end
																																						elseif (v202 <= 24) then
																																							if (v202 == (1972 - (5 + 1944))) then
																																								if (v199[v201[2 + 0]] == v199[v201[4]]) then
																																									v168 = v168 + 1;
																																								else
																																									v168 = v201[(4275 - 2882) - (1005 + 385)];
																																								end
																																							else
																																								local v267 = 0;
																																								local v268;
																																								local v269;
																																								local v270;
																																								local v271;
																																								while true do
																																									if (v267 == 1) then
																																										v270 = nil;
																																										v271 = nil;
																																										v267 = 2;
																																									end
																																									if (0 == v267) then
																																										v268 = 0;
																																										v269 = nil;
																																										v267 = 1;
																																									end
																																									if (v267 == 2) then
																																										while true do
																																											if (v268 == 1) then
																																												local v403 = 0;
																																												while true do
																																													if (v403 == 1) then
																																														v268 = 2;
																																														break;
																																													end
																																													if (0 == v403) then
																																														v271 = {};
																																														v270 = v18({}, {[v7("\153\244\112\138\42\173\222", "\198\171\25\228\78\200\166\194")]=function(v467, v468)
																																															local v486 = 0;
																																															local v487;
																																															local v488;
																																															while true do
																																																if (v486 == 0) then
																																																	v487 = 0;
																																																	v488 = nil;
																																																	v486 = 1;
																																																end
																																																if (v486 == 1) then
																																																	while true do
																																																		if (v487 == 0) then
																																																			local v531 = 0;
																																																			while true do
																																																				if (v531 == 0) then
																																																					v488 = v271[v468];
																																																					return v488[1293 - (398 + 894)][v488[1136 - ((2679 - 1550) + 5)]];
																																																				end
																																																			end
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																														end,[v7("\58\19\246\46\40\116\11\40\253\51", "\101\76\152\75\95\29")]=function(v467, v468, v469)
																																															local v489 = 0;
																																															local v490;
																																															local v491;
																																															while true do
																																																if (v489 == 1) then
																																																	while true do
																																																		if (v490 == 0) then
																																																			v491 = v271[v468];
																																																			v491[(1181 - (1046 + 132)) - 2][v491[387 - (75 + 310)]] = v469;
																																																			break;
																																																		end
																																																	end
																																																	break;
																																																end
																																																if (v489 == 0) then
																																																	v490 = 0;
																																																	v491 = nil;
																																																	v489 = 1;
																																																end
																																															end
																																														end});
																																														v403 = 1;
																																													end
																																												end
																																											end
																																											if (v268 == 2) then
																																												for v433 = 1 - 0, v201[819 - (488 + 327)] do
																																													local v434 = 0;
																																													local v435;
																																													local v436;
																																													while true do
																																														if (v434 == 0) then
																																															v435 = 0;
																																															v436 = nil;
																																															v434 = 1;
																																														end
																																														if (v434 == 1) then
																																															while true do
																																																if (v435 == 0) then
																																																	local v509 = 0;
																																																	while true do
																																																		if (1 == v509) then
																																																			v435 = 1;
																																																			break;
																																																		end
																																																		if (v509 == 0) then
																																																			v168 = v168 + (1427 - (928 + 498));
																																																			v436 = v193[v168];
																																																			v509 = 1;
																																																		end
																																																	end
																																																end
																																																if (v435 == 1) then
																																																	if (v436[1] == 31) then
																																																		v271[v433 - ((5 - 3) - 1)] = {v199,v436[3]};
																																																	else
																																																		v271[v433 - (100 - (37 + 62))] = {v67,v436[(1297 - (121 + 125)) - (31 + 149 + 868)]};
																																																	end
																																																	v198[#v198 + (1563 - (974 + 588))] = v271;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												v199[v201[2]] = v48(v269, v270, v68);
																																												break;
																																											end
																																											if (0 == v268) then
																																												local v405 = 0;
																																												while true do
																																													if (v405 == 1) then
																																														v268 = 1;
																																														break;
																																													end
																																													if (v405 == 0) then
																																														v269 = v194[v201[581 - (369 + 209)]];
																																														v270 = nil;
																																														v405 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v202 <= 25) then
																																							if not v199[v201[2]] then
																																								v168 = v168 + (1 - 0);
																																							else
																																								v168 = v201[509 - (208 + 31 + 267)];
																																							end
																																						elseif (v202 > (25 + 1)) then
																																							v199[v201[4 - 2]] = v48(v194[v201[395 - (153 + 239)]], nil, v68);
																																						else
																																							local v347 = 0;
																																							local v348;
																																							local v349;
																																							while true do
																																								if (1 == v347) then
																																									while true do
																																										if (v348 == 0) then
																																											v349 = v201[2];
																																											v199[v349](v21(v199, v349 + 1, v169));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v347 == 0) then
																																									v348 = 0;
																																									v349 = nil;
																																									v347 = 1;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (32 + 0)) then
																																						if (v202 <= 29) then
																																							if (v202 > (8 + 20)) then
																																								local v272 = 0;
																																								local v273;
																																								local v274;
																																								local v275;
																																								local v276;
																																								local v277;
																																								while true do
																																									if (v272 == 0) then
																																										v273 = 0;
																																										v274 = nil;
																																										v272 = 1;
																																									end
																																									if (v272 == 1) then
																																										v275 = nil;
																																										v276 = nil;
																																										v272 = 2;
																																									end
																																									if (2 == v272) then
																																										v277 = nil;
																																										while true do
																																											if (v273 == 2) then
																																												for v437 = v274, v169 do
																																													local v438 = 0;
																																													local v439;
																																													while true do
																																														if (v438 == 0) then
																																															v439 = 0;
																																															while true do
																																																if (v439 == 0) then
																																																	v277 = v277 + 1 + 0 + 0;
																																																	v199[v437] = v275[v277];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v273 == 1) then
																																												local v406 = 0;
																																												while true do
																																													if (v406 == 1) then
																																														v273 = 2;
																																														break;
																																													end
																																													if (v406 == 0) then
																																														v169 = (v276 + v274) - 1;
																																														v277 = 1306 - (488 + 124 + 694);
																																														v406 = 1;
																																													end
																																												end
																																											end
																																											if (v273 == 0) then
																																												local v407 = 0;
																																												while true do
																																													if (1 == v407) then
																																														v273 = 1;
																																														break;
																																													end
																																													if (v407 == 0) then
																																														v274 = v201[2];
																																														v275, v276 = v196(v199[v274](v21(v199, v274 + 1 + 0, v169)));
																																														v407 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							elseif v199[v201[(2260 - 1535) - (637 + 86)]] then
																																								v168 = v168 + (1777 - ((2295 - 1218) + (889 - (65 + 125))));
																																							else
																																								v168 = v201[3];
																																							end
																																						elseif (v202 <= 30) then
																																							local v278 = 0;
																																							local v279;
																																							local v280;
																																							local v281;
																																							local v282;
																																							while true do
																																								if (2 == v278) then
																																									while true do
																																										if (v279 == 1) then
																																											v282 = v199[v280 + 2];
																																											if (v282 > (0 - 0)) then
																																												if (v281 > v199[v280 + 1 + 0]) then
																																													v168 = v201[4 - (1546 - (68 + 1477))];
																																												else
																																													v199[v280 + 3] = v281;
																																												end
																																											elseif (v281 < v199[v280 + (1594 - (1560 + 33)) + 0]) then
																																												v168 = v201[3];
																																											else
																																												v199[v280 + ((991 - (97 + 264)) - (10 + (2106 - 1489)))] = v281;
																																											end
																																											break;
																																										end
																																										if (v279 == 0) then
																																											local v409 = 0;
																																											while true do
																																												if (v409 == 0) then
																																													v280 = v201[2 + (0 - 0)];
																																													v281 = v199[v280];
																																													v409 = 1;
																																												end
																																												if (v409 == 1) then
																																													v279 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v278 == 1) then
																																									v281 = nil;
																																									v282 = nil;
																																									v278 = 2;
																																								end
																																								if (v278 == 0) then
																																									v279 = 0;
																																									v280 = nil;
																																									v278 = 1;
																																								end
																																							end
																																						elseif (v202 == ((1126 - (1105 + 9)) + 15 + 4)) then
																																							v199[v201[(2024 - (115 + 542)) - ((907 - (110 + 72)) + 640)]] = v199[v201[11 - 8]];
																																						else
																																							local v353 = 0;
																																							local v354;
																																							local v355;
																																							while true do
																																								if (v353 == 1) then
																																									while true do
																																										if (v354 == 0) then
																																											v355 = v201[2];
																																											v199[v355] = v199[v355](v21(v199, v355 + ((1731 - 684) - ((2453 - (1117 + 542)) + 252)), v201[2 + (2 - 1)]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v353 == 0) then
																																									v354 = 0;
																																									v355 = nil;
																																									v353 = 1;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (18 + (1932 - (481 + 1435)))) then
																																						if (v202 == ((186 - 119) - 34)) then
																																							if (v199[v201[2]] > v199[v201[1686 - (225 + 1457)]]) then
																																								v168 = v168 + 1;
																																							else
																																								v168 = v168 + v201[(106 + 516) - ((569 - 168) + 218)];
																																							end
																																						else
																																							local v283 = 0;
																																							local v284;
																																							while true do
																																								if (0 == v283) then
																																									v284 = 0;
																																									while true do
																																										if (v284 == 0) then
																																											v199[v201[6 - 4]] = v201[3] ~= ((0 - 0) + 0);
																																											v168 = v168 + (3 - 2);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v202 <= 35) then
																																						v199[v201[(3 - 1) + 0]] = v199[v201[8 - 5]] / v199[v201[141 - (45 + (455 - (214 + 149)))]];
																																					elseif (v202 > (22 + 8 + 6)) then
																																						v199[v201[(367 + 1323) - (53 + 87 + (4790 - 3242))]] = v199[v201[3]] * v199[v201[(19 - 15) + 0]];
																																					else
																																						v68[v201[2 + 1]] = v199[v201[1618 - ((1970 - (1163 + 492)) + (2524 - 1223))]];
																																					end
																																				elseif (v202 <= (8 + 48)) then
																																					if (v202 <= 46) then
																																						if (v202 <= (1633 - ((90 - (19 + 47)) + (2307 - (356 + 383))))) then
																																							if (v202 <= (49 - 10)) then
																																								if (v202 > (2037 - (473 + 1526))) then
																																									if (v199[v201[2]] == v201[5 - 1]) then
																																										v168 = v168 + ((5159 - 3272) - (868 + (3276 - 2258)));
																																									else
																																										v168 = v201[3];
																																									end
																																								else
																																									local v286 = 0;
																																									local v287;
																																									local v288;
																																									local v289;
																																									local v290;
																																									while true do
																																										if (1 == v286) then
																																											v289 = nil;
																																											v290 = nil;
																																											v286 = 2;
																																										end
																																										if (2 == v286) then
																																											while true do
																																												if (2 == v287) then
																																													if (v289 > ((2311 - 911) - (316 + 283 + 801))) then
																																														if (v290 <= v199[v288 + 1]) then
																																															local v496 = 0;
																																															local v497;
																																															while true do
																																																if (v496 == 0) then
																																																	v497 = 0;
																																																	while true do
																																																		if (v497 == 0) then
																																																			v168 = v201[600 - (301 + (1753 - (888 + 569)))];
																																																			v199[v288 + (1995 - (1770 + 222))] = v290;
																																																			break;
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																														end
																																													elseif (v290 >= v199[v288 + (1747 - (120 + 595 + (1963 - 932)))]) then
																																														local v498 = 0;
																																														local v499;
																																														while true do
																																															if (v498 == 0) then
																																																v499 = 0;
																																																while true do
																																																	if (v499 == 0) then
																																																		v168 = v201[(1395 - (1187 + 205)) - (1680 - (851 + 829))];
																																																		v199[v288 + (12 - 9)] = v290;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																												if (v287 == 1) then
																																													local v411 = 0;
																																													while true do
																																														if (v411 == 1) then
																																															v287 = 2;
																																															break;
																																														end
																																														if (v411 == 0) then
																																															v290 = v199[v288] + v289;
																																															v199[v288] = v290;
																																															v411 = 1;
																																														end
																																													end
																																												end
																																												if (v287 == 0) then
																																													local v412 = 0;
																																													while true do
																																														if (0 == v412) then
																																															v288 = v201[648 - (138 + 508)];
																																															v289 = v199[v288 + ((2 + 0) - 0)];
																																															v412 = 1;
																																														end
																																														if (1 == v412) then
																																															v287 = 1;
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v286) then
																																											v287 = 0;
																																											v288 = nil;
																																											v286 = 1;
																																										end
																																									end
																																								end
																																							elseif (v202 > 40) then
																																								local v291 = 0;
																																								local v292;
																																								local v293;
																																								while true do
																																									if (v291 == 0) then
																																										v292 = 0;
																																										v293 = nil;
																																										v291 = 1;
																																									end
																																									if (v291 == 1) then
																																										while true do
																																											if (v292 == 0) then
																																												v293 = v201[8 - 6];
																																												v199[v293] = v199[v293](v21(v199, v293 + (2 - 1) + 0, v169));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							elseif (v199[v201[2 - (0 - 0)]] ~= v199[v201[1570 - (337 + 1229)]]) then
																																								v168 = v168 + ((6 - 3) - (1540 - (1427 + 111)));
																																							else
																																								v168 = v201[8 - (1 + 4)];
																																							end
																																						elseif (v202 <= (20 + 4 + 19)) then
																																							if (v202 == (581 - (105 + 215 + 219))) then
																																								v199[v201[2]] = v199[v201[2 + 1]] + v199[v201[4]];
																																							else
																																								v199[v201[(1420 - (511 + 901)) - (15 - 9)]] = {};
																																							end
																																						elseif (v202 <= (9 + 3 + 2 + 30)) then
																																							if (v201[2] == v201[1031 - (423 + 104 + 500)]) then
																																								v168 = v168 + 1;
																																							else
																																								v168 = v201[2 + 1];
																																							end
																																						elseif (v202 == ((304 + 79) - (281 + 57))) then
																																							if (v201[2 + 0] < v199[v201[712 - (191 + 517)]]) then
																																								v168 = v201[1 + 2 + 0];
																																							else
																																								v168 = v168 + 1;
																																							end
																																						else
																																							local v362 = 0;
																																							local v363;
																																							local v364;
																																							local v365;
																																							local v366;
																																							while true do
																																								if (v362 == 1) then
																																									v365 = nil;
																																									v366 = nil;
																																									v362 = 2;
																																								end
																																								if (v362 == 2) then
																																									while true do
																																										if (0 == v363) then
																																											local v455 = 0;
																																											while true do
																																												if (v455 == 1) then
																																													v363 = 1;
																																													break;
																																												end
																																												if (v455 == 0) then
																																													v364 = v201[2 + 0 + 0];
																																													v365 = {v199[v364](v21(v199, v364 + 1, v201[3]))};
																																													v455 = 1;
																																												end
																																											end
																																										end
																																										if (1 == v363) then
																																											v366 = (1675 - (1225 + 450)) + 0;
																																											for v477 = v364, v201[922 - (549 + (811 - (324 + 118)))] do
																																												local v478 = 0;
																																												local v479;
																																												while true do
																																													if (v478 == 0) then
																																														v479 = 0;
																																														while true do
																																															if (v479 == 0) then
																																																v366 = v366 + 1 + 0;
																																																v199[v477] = v365[v366];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v362 == 0) then
																																									v363 = 0;
																																									v364 = nil;
																																									v362 = 1;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (1032 - (822 + 124 + 32 + 3))) then
																																						if (v202 <= (1656 - (1115 + 493))) then
																																							if (v202 > 47) then
																																								local v296 = 0;
																																								local v297;
																																								local v298;
																																								while true do
																																									if (v296 == 1) then
																																										while true do
																																											if (v297 == 0) then
																																												v298 = v201[2 + 0];
																																												do
																																													return v199[v298](v21(v199, v298 + 1 + 0, v201[7 - 4]));
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v296 == 0) then
																																										v297 = 0;
																																										v298 = nil;
																																										v296 = 1;
																																									end
																																								end
																																							elseif (v199[v201[1 + 1]] < v199[v201[1113 - (440 + 669)]]) then
																																								v168 = v168 + (1625 - ((2784 - (271 + 1519)) + (2378 - (529 + 1219))));
																																							else
																																								v168 = v201[3];
																																							end
																																						elseif (v202 <= (107 - 58)) then
																																							local v299 = 0;
																																							local v300;
																																							local v301;
																																							local v302;
																																							local v303;
																																							local v304;
																																							while true do
																																								if (0 == v299) then
																																									v300 = 0;
																																									v301 = nil;
																																									v299 = 1;
																																								end
																																								if (2 == v299) then
																																									v304 = nil;
																																									while true do
																																										if (v300 == 1) then
																																											local v416 = 0;
																																											while true do
																																												if (0 == v416) then
																																													v169 = (v303 + v301) - (1 - 0);
																																													v304 = 0 + 0;
																																													v416 = 1;
																																												end
																																												if (v416 == 1) then
																																													v300 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v300 == 2) then
																																											for v440 = v301, v169 do
																																												local v441 = 0;
																																												local v442;
																																												while true do
																																													if (v441 == 0) then
																																														v442 = 0;
																																														while true do
																																															if (v442 == 0) then
																																																v304 = v304 + (2 - 1);
																																																v199[v440] = v302[v304];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v300 == 0) then
																																											local v417 = 0;
																																											while true do
																																												if (v417 == 0) then
																																													v301 = v201[2];
																																													v302, v303 = v196(v199[v301](v199[v301 + ((562 - 312) - ((166 - (51 + 19)) + (1833 - (993 + 687))))]));
																																													v417 = 1;
																																												end
																																												if (v417 == 1) then
																																													v300 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v299 == 1) then
																																									v302 = nil;
																																									v303 = nil;
																																									v299 = 2;
																																								end
																																							end
																																						elseif (v202 > 50) then
																																							do
																																								return v199[v201[1527 - (7 + (2207 - (351 + 338)))]];
																																							end
																																						else
																																							v199[v201[265 - (77 + 186)]] = v67[v201[3]];
																																						end
																																					elseif (v202 <= (6 + 47)) then
																																						if (v202 == (424 - ((2008 - (1192 + 733)) + 183 + 106))) then
																																							v199[v201[(2 - 1) + (2 - 1)]] = v199[v201[(1954 - (959 + 993)) + 1]] - v199[v201[3 + 1]];
																																						else
																																							local v306 = 0;
																																							local v307;
																																							local v308;
																																							while true do
																																								if (v306 == 0) then
																																									v307 = 0;
																																									v308 = nil;
																																									v306 = 1;
																																								end
																																								if (v306 == 1) then
																																									while true do
																																										if (0 == v307) then
																																											v308 = v201[1 + 1];
																																											do
																																												return v21(v199, v308, v308 + v201[14 - 11]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v202 <= (1653 - (675 + 924))) then
																																						if (v201[2] < v201[1 + 3]) then
																																							v168 = v168 + 1;
																																						else
																																							v168 = v201[(8 - 4) - (1051 - (212 + 838))];
																																						end
																																					elseif (v202 == (877 - ((1666 - (442 + 1071)) + 669))) then
																																						v199[v201[2]] = v199[v201[3]] % v199[v201[(759 - (600 + 147)) - 8]];
																																					else
																																						v199[v201[1 + (1621 - (1567 + 53))]] = v199[v201[(1379 - (865 + 505)) - (6 + 0)]] - v201[14 - (9 + 1)];
																																					end
																																				elseif (v202 <= (137 - 71)) then
																																					if (v202 <= ((132 - 89) + 18)) then
																																						if (v202 <= (17 + 41)) then
																																							if (v202 > ((1490 - (617 + 704)) - 112)) then
																																								v199[v201[4 - (2 + 0)]] = v201[576 - (130 + 293 + 150)] / v201[1034 - (315 + 715)];
																																							elseif (v201[(6584 - 4759) - (401 + 1422)] ~= v199[v201[3 + (1124 - (974 + 149))]]) then
																																								v168 = v168 + (2 - 1);
																																							else
																																								v168 = v201[(6 + 7) - 10];
																																							end
																																						elseif (v202 <= (2055 - (1777 + 219))) then
																																							local v310 = 0;
																																							local v311;
																																							local v312;
																																							local v313;
																																							while true do
																																								if (v310 == 0) then
																																									v311 = 0;
																																									v312 = nil;
																																									v310 = 1;
																																								end
																																								if (1 == v310) then
																																									v313 = nil;
																																									while true do
																																										if (v311 == 0) then
																																											local v419 = 0;
																																											while true do
																																												if (1 == v419) then
																																													v311 = 1;
																																													break;
																																												end
																																												if (v419 == 0) then
																																													v312 = v201[1 + 1];
																																													v313 = v199[v312];
																																													v419 = 1;
																																												end
																																											end
																																										end
																																										if (v311 == 1) then
																																											for v443 = v312 + 1, v201[3 + 0] do
																																												v15(v313, v199[v443]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v202 == (1538 - (717 + (2384 - (388 + 1235))))) then
																																							if (v201[1044 - (97 + 945)] == v199[v201[628 - ((1468 - (323 + 530)) + 9)]]) then
																																								v168 = v168 + (1 - (0 + 0));
																																							else
																																								v168 = v201[3];
																																							end
																																						elseif (v199[v201[1630 - ((2527 - (342 + 1484)) + 105 + 822)]] <= v201[4]) then
																																							v168 = v168 + 1 + (22 - (15 + 7));
																																						else
																																							v168 = v201[(3481 - (169 + 1695)) - (1373 + 241)];
																																						end
																																					elseif (v202 <= (1773 - (56 + 1654))) then
																																						if (v202 > (7 + 55)) then
																																							v199[v201[9 - 7]][v199[v201[(8 - 4) - 1]]] = v199[v201[6 - 2]];
																																						else
																																							v199[v201[(530 + 192) - ((1384 - 867) + (744 - 541))]] = v199[v201[1302 - (104 + 1195)]] + v201[9 - (4 + 1)];
																																						end
																																					elseif (v202 <= 64) then
																																						v199[v201[2 + 0]]();
																																					elseif (v202 == (3 + 62)) then
																																						v168 = v201[(1039 - (365 + 59)) - ((1289 - 812) + 135)];
																																					else
																																						local v375 = 0;
																																						local v376;
																																						local v377;
																																						local v378;
																																						while true do
																																							if (v375 == 1) then
																																								v378 = nil;
																																								while true do
																																									if (v376 == 0) then
																																										local v456 = 0;
																																										while true do
																																											if (v456 == 1) then
																																												v376 = 1;
																																												break;
																																											end
																																											if (v456 == 0) then
																																												v377 = v201[(11 - 5) - (1305 - (238 + 1064))];
																																												v378 = v199[v377];
																																												v456 = 1;
																																											end
																																										end
																																									end
																																									if (v376 == 1) then
																																										for v483 = v377 + 1, v201[910 - (806 + 100)] do
																																											v378 = v378 .. v199[v483];
																																										end
																																										v199[v201[1 + 1]] = v378;
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v375 == 0) then
																																								v376 = 0;
																																								v377 = nil;
																																								v375 = 1;
																																							end
																																						end
																																					end
																																				elseif (v202 <= (1035 - (158 + (1651 - 845)))) then
																																					if (v202 <= ((47 + 1317) - (894 + 16 + 386))) then
																																						if (v202 == (38 + 29)) then
																																							v199[v201[3 - 1]] = v199[v201[3 + (0 - 0)]] * v201[7 - (322 - (108 + 211))];
																																						else
																																							v199[v201[(11 - 8) - (752 - (195 + 556))]][v199[v201[1929 - (248 + (4926 - 3248))]]] = v201[(357 + 617) - ((1272 - 756) + (2424 - (631 + 1339)))];
																																						end
																																					elseif (v202 <= 69) then
																																						if (v199[v201[1024 - (629 + (2113 - (1352 + 368)))]] <= v199[v201[(1 + 13) - 10]]) then
																																							v168 = v168 + ((32 + 23) - ((116 - 73) + 11));
																																						else
																																							v168 = v201[1 + (5 - 3)];
																																						end
																																					elseif (v202 > (1639 - (1091 + 478))) then
																																						v67[v201[3]] = v199[v201[(89 - (46 + 39)) - (879 - (837 + 40))]];
																																					else
																																						local v382 = 0;
																																						local v383;
																																						local v384;
																																						local v385;
																																						while true do
																																							if (v382 == 0) then
																																								v383 = 0;
																																								v384 = nil;
																																								v382 = 1;
																																							end
																																							if (v382 == 1) then
																																								v385 = nil;
																																								while true do
																																									if (v383 == 0) then
																																										local v458 = 0;
																																										while true do
																																											if (1 == v458) then
																																												v383 = 1;
																																												break;
																																											end
																																											if (v458 == 0) then
																																												v384 = v201[2];
																																												v385 = v199[v384];
																																												v458 = 1;
																																											end
																																										end
																																									end
																																									if (v383 == 1) then
																																										for v484 = v384 + (2 - 1), v169 do
																																											v15(v385, v199[v484]);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v202 <= 73) then
																																					if (v202 > (8 + 64)) then
																																						v199[v201[(266 + 86) - ((289 - 175) + (656 - (17 + 403)))]] = #v199[v201[14 - 11]];
																																					else
																																						local v321 = 0;
																																						local v322;
																																						local v323;
																																						local v324;
																																						local v325;
																																						local v326;
																																						while true do
																																							if (v321 == 0) then
																																								v322 = 0;
																																								v323 = nil;
																																								v321 = 1;
																																							end
																																							if (v321 == 1) then
																																								v324 = nil;
																																								v325 = nil;
																																								v321 = 2;
																																							end
																																							if (v321 == 2) then
																																								v326 = nil;
																																								while true do
																																									if (0 == v322) then
																																										local v420 = 0;
																																										while true do
																																											if (0 == v420) then
																																												v323 = v201[1595 - (1256 + 337)];
																																												v324, v325 = v196(v199[v323](v21(v199, v323 + 1, v201[(3 + 2) - 2])));
																																												v420 = 1;
																																											end
																																											if (v420 == 1) then
																																												v322 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (v322 == 1) then
																																										local v421 = 0;
																																										while true do
																																											if (v421 == 1) then
																																												v322 = 2;
																																												break;
																																											end
																																											if (0 == v421) then
																																												v169 = (v325 + v323) - 1;
																																												v326 = 1430 - (781 + 649);
																																												v421 = 1;
																																											end
																																										end
																																									end
																																									if (v322 == 2) then
																																										for v444 = v323, v169 do
																																											local v445 = 0;
																																											local v446;
																																											while true do
																																												if (v445 == 0) then
																																													v446 = 0;
																																													while true do
																																														if (v446 == 0) then
																																															v326 = v326 + ((335 - 78) - (37 + 73 + 146));
																																															v199[v444] = v324[v326];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v202 <= (1078 - (839 + 165))) then
																																					local v327 = 0;
																																					local v328;
																																					local v329;
																																					while true do
																																						if (v327 == 0) then
																																							v328 = 0;
																																							v329 = nil;
																																							v327 = 1;
																																						end
																																						if (v327 == 1) then
																																							while true do
																																								if (v328 == 0) then
																																									v329 = v201[(1 - 0) + 1];
																																									do
																																										return v199[v329](v21(v199, v329 + 1 + 0 + 0, v169));
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v202 > (1477 - (341 + 1061))) then
																																					for v388 = v201[(1 - 0) + (806 - (788 + 17))], v201[1286 - (1248 + 35)] do
																																						v199[v388] = nil;
																																					end
																																				else
																																					v199[v201[2]] = v199[v201[3]][v199[v201[3 + 1]]];
																																				end
																																				v168 = v168 + (104 - (87 + 11 + 5));
																																				break;
																																			end
																																			if (v209 == 0) then
																																				local v222 = 0;
																																				while true do
																																					if (v222 == 1) then
																																						v209 = 1;
																																						break;
																																					end
																																					if (v222 == 0) then
																																						v201 = v193[v168];
																																						v202 = v201[1];
																																						v222 = 1;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v192 == 0) then
																															v193 = v104;
																															v194 = v105;
																															v195 = v106;
																															v192 = 1;
																														end
																														if (v192 == 1) then
																															v196 = v46;
																															v197 = {};
																															v198 = {};
																															v192 = 2;
																														end
																													end
																												end;
																												v182 = 1;
																											end
																											if (1 == v182) then
																												v167 = 3;
																												break;
																											end
																										end
																									end
																									if (v167 == 3) then
																										_G['A'], _G['B'] = v46(v19(v172));
																										if not _G['A'][(2 - 1) + 0] then
																											local v189 = 0;
																											local v190;
																											local v191;
																											while true do
																												if (v189 == 1) then
																													while true do
																														if (v190 == 0) then
																															v191 = v66[4 + (455 - (392 + 63))][v168] or "?";
																															error(v7("\66\61\19\31\97\42\65\19\99\44\14\4\49\63\21\86\74", "\17\94\97\118") .. v191 .. v7("\13\2", "\80\56\189\125") .. _G['A'][7 - (3 + 2)]);
																															break;
																														end
																													end
																													break;
																												end
																												if (v189 == 0) then
																													v190 = 0;
																													v191 = nil;
																													v189 = 1;
																												end
																											end
																										else
																											return v21(_G['A'], (3 - 2) + 1, _G['B']);
																										end
																										break;
																									end
																									if (v167 == 1) then
																										local v183 = 0;
																										while true do
																											if (v183 == 0) then
																												v170 = {...};
																												v171 = v20("#", ...) - (1 + 0);
																												v183 = 1;
																											end
																											if (v183 == 1) then
																												v167 = 2;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v166 == 0) then
																								v167 = 0;
																								v168 = nil;
																								v166 = 1;
																							end
																							if (v166 == 2) then
																								v171 = nil;
																								v172 = nil;
																								v166 = 3;
																							end
																							if (v166 == 1) then
																								v169 = nil;
																								v170 = nil;
																								v166 = 2;
																							end
																						end
																					end;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v102 == 0) then
															v103 = 0;
															v104 = nil;
															v102 = 1;
														end
													end
												end;
												return v48(v47(), {}, v26)(...);
											end
										end
									end
									v51 = 1;
								end
							end
						end
						break;
					end
					if (2 == v35) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 3;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 4) then
			v15 = _G[v7("\161\27\120\114\172", "\213\122\26\30\201")][v7("\203\142\183\54\208\148", "\162\224\196\83")];
			v16 = _G[v7("\183\242\216\140", "\218\147\172\228\156\106\86")][v7("\72\163\123\144\79", "\36\199\30\232\63")];
			v17 = _G[v7("\112\183\238\130\160\33\97", "\23\210\154\228\197\79")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\153\123\166\25\49\30\139\106\179\22\56\15", "\234\30\210\116\84\106")];
			v24 = 5;
		end
		if (v24 == 2) then
			v7 = function(v27, v28)
				local v49 = 0;
				local v50;
				while true do
					if (v49 == 1) then
						return v5(v50);
					end
					if (v49 == 0) then
						v50 = {};
						for v52 = 1, #v27 do
							v6(v50, v0(v4(v1(v2(v27, v52, v52 + 1)), v1(v2(v28, 1 + ((v52 - 1) % #v28), 1 + ((v52 - 1) % #v28) + 1))) % 256));
						end
						v49 = 1;
					end
				end
			end;
			v8 = _G[v7("\47\137\48\242\56\11\243\74", "\91\230\94\135\85\105\150\56")];
			v9 = _G[v7("\81\96\182\11\164\67", "\34\20\196\98\202\36")][v7("\188\31\69\61", "\222\102\49\88\140\22")];
			v10 = _G[v7("\169\234\226\31\180\249", "\218\158\144\118")][v7("\181\251\90\2", "\214\147\59\112\42\51\78\182")];
			v24 = 3;
		end
		if (3 == v24) then
			v11 = _G[v7("\206\193\33\218\214\27", "\189\181\83\179\184\124")][v7("\238\187\136", "\157\206\234\117\128\70\111\201")];
			v12 = _G[v7("\23\148\42\142\62\214", "\100\224\88\231\80\177\87")][v7("\200\5\151\254", "\175\118\226\156\83\122")];
			v13 = _G[v7("\183\83\31\215\166\217", "\196\39\109\190\200\190\141\237")][v7("\198\129\242", "\180\228\130\199\236\108")];
			v14 = _G[v7("\18\254\232\77\40", "\102\159\138\33\77")][v7("\116\5\8\91\130\255", "\23\106\102\56\227\139\105")];
			v24 = 4;
		end
		if (v24 == 5) then
			v19 = _G[v7("\76\170\42\68\141", "\60\201\75\40\225\30\109")];
			v20 = _G[v7("\68\226\11\37\201\74", "\55\135\103\64\170\62")];
			v21 = _G[v7("\9\167\250\170\31\162", "\124\201\138\203")] or _G[v7("\100\184\10\234\224", "\16\217\104\134\133\85\98\67")][v7("\54\85\194\94\87\236", "\67\59\178\63\52\135\171")];
			v22 = _G[v7("\30\217\174\63\230\8\211\178", "\106\182\192\74\139")];
			v24 = 6;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v3 = bit32 or bit;
			v24 = 1;
		end
		if (v24 == 1) then
			v4 = v3.bxor;
			v5 = table.concat;
			v6 = table.insert;
			v7 = nil;
			v24 = 2;
		end
	end
end
